spring:
  application:
    name: auction-service
  
  datasource:
    url: jdbc:postgresql://localhost:5433/auction_db
    username: ${DB_USERNAME:auction_user}
    password: ${DB_PASSWORD:auction_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        generate_statistics: true
        jdbc:
          batch_size: 25
          batch_versioned_data: true
    show-sql: false
    open-in-view: false
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  data:
    redis:
      host: localhost
      port: 6380
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 8
          min-idle: 2
    
    elasticsearch:
      repositories:
        enabled: true
      client:
        reactive:
          endpoints: localhost:9201
  
  rabbitmq:
    host: localhost
    port: 5673
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: /
    publisher-confirms: true
    publisher-returns: true
  
  cache:
    type: redis
    redis:
      time-to-live: 300000
      cache-null-values: false
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080/auth/realms/auction-aggregator}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8080/auth/realms/auction-aggregator/protocol/openid-connect/certs}

server:
  port: 8081
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  error:
    include-message: always
    include-binding-errors: always

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

logging:
  level:
    com.auctionaggregator: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/auction-service.log
    max-size: 10MB
    max-history: 30

# Application specific configurations
auction:
  default-bid-increment: 100
  auto-extend-minutes: 5
  max-images-per-auction: 20
  search:
    max-results: 1000
    default-page-size: 20
  websocket:
    max-sessions-per-auction: 1000
    heartbeat-interval: 30000
  
# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha

# Web Scraper Configuration
scraper:
  enabled: true
  thread-pool-size: 5
  connection-timeout: 30000
  read-timeout: 60000
  max-retries: 3
  retry-delay: 5000
  
  scrapers:
    real-estate:
      enabled: true
      url: https://www.auction.com
      page-load-timeout: 30000
      rate-limit:
        requests-per-minute: 30
        burst-size: 5
    
    gov-auction:
      enabled: true
      url: https://gem.gov.in
      page-load-timeout: 45000
      rate-limit:
        requests-per-minute: 20
        burst-size: 3
    
    vehicle-auction:
      enabled: true
      url: https://www.copart.com
      page-load-timeout: 30000
      rate-limit:
        requests-per-minute: 40
        burst-size: 8